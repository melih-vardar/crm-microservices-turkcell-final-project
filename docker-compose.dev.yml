services:
  # DATABASES
  # User service database
  postgres_5433:
    image: postgres:latest
    container_name: postgres_5433
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: user
    ports:
      - "5433:5432"
    volumes:
      - postgres_5433_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Customer service database
  postgres_5435:
    image: postgres:latest
    container_name: postgres_5435
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: customer
    ports:
      - "5435:5432"
    volumes:
      - postgres_5435_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Billing service database
  postgres_5434:
    image: postgres:latest
    container_name: postgres_5434
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: billing
    ports:
      - "5434:5432"
    volumes:
      - postgres_5434_data:/var/lib/postgresql/data
    networks:
      - app-network

  # COMMUNICATIONS
  kafka:
    image: bitnami/kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,EXTERNAL://localhost:9094
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - BITNAMI_DEBUG=yes
      - KAFKA_CFG_NUM_PARTITIONS=2

  # BASIC SERVICES
  discovery-server:
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    container_name: discovery-server
    ports:
      - "8888:8888"
    networks:
      - app-network

  gateway-server:
    build:
      context: ./gateway-server
      dockerfile: Dockerfile
    container_name: gateway-server
    ports:
      - "8080:8080"
    networks:
      - app-network
    depends_on:
      - discovery-server
      - utility-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8888/eureka

  # CUSTOM SERVICES
  utility-server:
    build:
      context: ./utility-server
      dockerfile: Dockerfile
    container_name: utility-server
    ports:
      - "8100:8100"
    networks:
      - app-network
    depends_on:
      - discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8888/eureka

networks:
  app-network:
    driver: bridge

volumes:
  postgres_5433_data:
  postgres_5434_data:


